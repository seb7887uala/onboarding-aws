// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/repository/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/sebsegura/onboarding-aws/process-status-aws-lambda/pkg/models"
)

// MockContactRepository is a mock of ContactRepository interface.
type MockContactRepository struct {
	ctrl     *gomock.Controller
	recorder *MockContactRepositoryMockRecorder
}

// MockContactRepositoryMockRecorder is the mock recorder for MockContactRepository.
type MockContactRepositoryMockRecorder struct {
	mock *MockContactRepository
}

// NewMockContactRepository creates a new mock instance.
func NewMockContactRepository(ctrl *gomock.Controller) *MockContactRepository {
	mock := &MockContactRepository{ctrl: ctrl}
	mock.recorder = &MockContactRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContactRepository) EXPECT() *MockContactRepositoryMockRecorder {
	return m.recorder
}

// UpdateContact mocks base method.
func (m *MockContactRepository) UpdateContact(contact models.Contact) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateContact", contact)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateContact indicates an expected call of UpdateContact.
func (mr *MockContactRepositoryMockRecorder) UpdateContact(contact interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateContact", reflect.TypeOf((*MockContactRepository)(nil).UpdateContact), contact)
}
